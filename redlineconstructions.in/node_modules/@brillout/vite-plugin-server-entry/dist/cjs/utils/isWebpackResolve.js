"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isWebpackResolve = isWebpackResolve;
const assert_js_1 = require("./assert.js");
const filesystemPathHandling_js_1 = require("./filesystemPathHandling.js");
function isWebpackResolve(moduleResolve, cwd) {
    (0, assert_js_1.assert)(process); // We are in a Node.js-like environment
    return (
    // Upon `require.resolve()` webpack returns a number
    typeof moduleResolve === 'number' ||
        // Upon `require.resolve()` webpack returns a path such as /test/webpack/dist/server/entry.mjs which seems to be relative to the monorepo root
        getFirstDir(moduleResolve) !== getFirstDir(cwd) ||
        // `require.resolve()` + windows => webpack returns file:///D:/test/webpack/dist/server/entry.mjs
        (process.platform === 'win32' && getSecondDir(moduleResolve) !== getSecondDir(cwd)));
}
function getFirstDir(path) {
    return getDirs(path)[0];
}
function getSecondDir(path) {
    return getDirs(path)[1];
}
function getDirs(path) {
    (0, assert_js_1.assert)(!path.startsWith('file:')); // `file://` should already have been removed
    return (0, filesystemPathHandling_js_1.toPosixPath)(path).split('/').filter(Boolean);
}
