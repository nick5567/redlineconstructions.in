export { handleAssetsManifest };
export { handleAssetsManifest_getBuildConfig };
export { handleAssetsManifest_isFixEnabled };
export { handleAssetsManifest_assertUsageCssCodeSplit };
export { handleAssetsManifest_assertUsageCssTarget };
import type { Environment, ResolvedConfig, Rollup, UserConfig } from 'vite';
type Bundle = Rollup.OutputBundle;
declare function handleAssetsManifest_isFixEnabled(config: ResolvedConfig | UserConfig): boolean;
declare function handleAssetsManifest_assertUsageCssCodeSplit(config: ResolvedConfig): void;
declare function handleAssetsManifest_assertUsageCssTarget(config: ResolvedConfig): void;
declare function handleAssetsManifest_getBuildConfig(config: UserConfig): Promise<{
    readonly ssrEmitAssets: true | undefined;
    readonly cssMinify: "esbuild" | undefined;
    readonly manifest: "_temp_manifest.json";
    readonly copyPublicDir: boolean | undefined;
}>;
declare function handleAssetsManifest(config: ResolvedConfig, viteEnv: Environment | undefined, options: {
    dir: string | undefined;
}, bundle: Bundle): Promise<void>;
