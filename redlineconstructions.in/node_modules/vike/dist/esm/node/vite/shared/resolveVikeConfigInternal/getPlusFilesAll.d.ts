export { getPlusFilesAll };
export type { PlusFileValue };
export type { PlusFile };
export type { PlusFilesByLocationId };
import { type LocationId } from './filesystemRouting.js';
import { type EsbuildCache } from './transpileAndExecuteFile.js';
import { PointerImportLoaded } from './loadFileAtConfigTime.js';
import type { FilePathResolved } from '../../../../types/FilePath.js';
type PlusFile = PlusFileConfig | PlusFileValue;
type PlusFileCommons = {
    locationId: LocationId;
    filePath: FilePathResolved;
};
type PlusFileConfig = PlusFileCommons & {
    isConfigFile: true;
    fileExportsByConfigName: Record<string, // configName
    unknown>;
    pointerImportsByConfigName: Record<string, // configName
    PointerImportLoaded>;
    isExtensionConfig: boolean;
    extendsFilePaths: string[];
    isNotLoaded?: undefined;
};
type PlusFileValue = PlusFileCommons & {
    isConfigFile: false;
    configName: string;
} & ({
    isNotLoaded: false;
    fileExportsByConfigName: Record<string, // configName
    unknown>;
} | {
    isNotLoaded: true;
}) & {
    isExtensionConfig?: undefined;
};
type PlusFilesByLocationId = Record<LocationId, PlusFile[]>;
declare function getPlusFilesAll(userRootDir: string, esbuildCache: EsbuildCache): Promise<PlusFilesByLocationId>;
