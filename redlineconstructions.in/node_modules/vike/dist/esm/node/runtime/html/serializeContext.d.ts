export { getPageContextClientSerialized };
export { getPageContextClientSerializedAbort };
export { getGlobalContextClientSerialized };
export type { PageContextSerialization };
export type { PassToClient };
import type { UrlRedirect } from '../../../shared/route/abort.js';
import type { GlobalContextServerInternal } from '../globalContext.js';
type PageContextSerialization = {
    pageId: string;
    routeParams: Record<string, string>;
    _passToClient: PassToClient;
    is404: null | boolean;
    pageProps?: Record<string, unknown>;
    _pageContextInit: Record<string, unknown>;
    _globalContext: GlobalContextServerInternal;
    isClientSideNavigation: boolean;
};
declare function getPageContextClientSerialized(pageContext: PageContextSerialization): string;
declare function getGlobalContextClientSerialized(pageContext: PageContextSerialization): string;
type PassToClient = (string | {
    prop: string;
    once?: boolean;
})[];
declare function getPageContextClientSerializedAbort(pageContext: Record<string, unknown> & ({
    _urlRedirect: UrlRedirect;
} | {
    _urlRewrite: string;
} | {
    abortStatusCode: number;
})): string;
