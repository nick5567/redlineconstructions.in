export { execHookOnRenderHtml };
export type { RenderHook };
import { type HtmlRender } from '../html/renderHtml.js';
import { type Hook } from '../../../shared/hooks/getHook.js';
import type { PageAsset } from './getPageAssets.js';
import { type PageContextForPublicUsageServer } from './preparePageContextForPublicUsageServer.js';
import type { PageContextSerialization } from '../html/serializeContext.js';
import type { GlobalContextServerInternal } from '../globalContext.js';
type GetPageAssets = () => Promise<PageAsset[]>;
type RenderHook = Hook & {
    hookName: HookName;
};
type HookName = 'onRenderHtml' | 'render';
declare function execHookOnRenderHtml(pageContext: PageContextForPublicUsageServer & PageContextSerialization & {
    pageId: string;
    _globalContext: GlobalContextServerInternal;
    __getPageAssets: GetPageAssets;
    _isHtmlOnly: boolean;
    _baseServer: string;
    _pageFilePathsLoaded: string[];
    _httpRequestId: number | null;
}): Promise<{
    renderHook: RenderHook;
    htmlRender: HtmlRender;
}>;
