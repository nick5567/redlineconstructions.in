"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setGlobalContext_buildEntry = void 0;
exports.route = route;
exports.getPagesAndRoutes = getPagesAndRoutes;
// Needed by Vike
var globalContext_js_1 = require("../node/runtime/globalContext.js");
Object.defineProperty(exports, "setGlobalContext_buildEntry", { enumerable: true, get: function () { return globalContext_js_1.setGlobalContext_buildEntry; } });
const index_js_1 = require("../shared/route/index.js");
const globalContext_js_2 = require("../node/runtime/globalContext.js");
const assertSetup_js_1 = require("../utils/assertSetup.js");
/**
 * Used by {@link https://github.com/magne4000/vite-plugin-vercel|vite-plugin-vercel} to compute some rewrite rules and extract { isr } configs.
 *
 * TO-DO/eventually: remove
 */
async function getPagesAndRoutes() {
    (0, assertSetup_js_1.setNodeEnvProduction)();
    await (0, globalContext_js_2.initGlobalContext_getPagesAndRoutes)();
    const { globalContext } = await (0, globalContext_js_2.getGlobalContextServerInternal)();
    const { 
    //
    _pageRoutes: pageRoutes, _pageFilesAll: pageFilesAll, _pageConfigs: pageConfigs, _allPageIds: allPageIds, } = globalContext;
    return {
        pageRoutes,
        pageFilesAll,
        pageConfigs,
        allPageIds,
    };
}
async function route(pageContext) {
    const pageContextFromRoute = await (0, index_js_1.route)(pageContext);
    // Old interface
    return { pageContextAddendum: pageContextFromRoute };
}
