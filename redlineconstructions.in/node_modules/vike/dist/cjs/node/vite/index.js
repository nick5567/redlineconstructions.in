"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.version = exports.getVikeConfig = void 0;
exports.plugin = plugin;
exports.ssr = plugin;
exports.default = plugin;
var resolveVikeConfigInternal_js_1 = require("./shared/resolveVikeConfigInternal.js");
Object.defineProperty(exports, "getVikeConfig", { enumerable: true, get: function () { return resolveVikeConfigInternal_js_1.getVikeConfig; } });
var utils_js_1 = require("./utils.js");
Object.defineProperty(exports, "version", { enumerable: true, get: function () { return utils_js_1.PROJECT_VERSION; } });
const utils_js_2 = require("./utils.js");
const pluginBuild_js_1 = require("./plugins/pluginBuild.js");
const pluginPreview_js_1 = require("./plugins/pluginPreview.js");
const pluginDev_js_1 = require("./plugins/pluginDev.js");
const pluginVirtualFiles_js_1 = require("./plugins/pluginVirtualFiles.js");
const pluginExtractAssets_js_1 = require("./plugins/pluginExtractAssets.js");
const pluginExtractExportNames_js_1 = require("./plugins/pluginExtractExportNames.js");
const pluginSetGlobalContext_js_1 = require("./plugins/pluginSetGlobalContext.js");
const pluginCommon_js_1 = require("./plugins/pluginCommon.js");
const pluginBaseUrls_js_1 = require("./plugins/pluginBaseUrls.js");
const pluginEnvVars_js_1 = require("./plugins/pluginEnvVars.js");
const picocolors_1 = __importDefault(require("@brillout/picocolors"));
const pluginFileEnv_js_1 = require("./plugins/pluginFileEnv.js");
const getPageAssets_js_1 = require("../runtime/renderPage/getPageAssets.js");
const resolveClientEntriesDev_js_1 = require("./shared/resolveClientEntriesDev.js");
const pluginWorkaroundCssModuleHmr_js_1 = require("./plugins/pluginWorkaroundCssModuleHmr.js");
const pluginWorkaroundVite6HmrRegression_js_1 = require("./plugins/pluginWorkaroundVite6HmrRegression.js");
const pluginReplaceConstants_js_1 = require("./plugins/pluginReplaceConstants.js");
// We don't call this in ./onLoad.ts to avoid a cyclic dependency with utils.ts
(0, getPageAssets_js_1.setResolveClientEntriesDev)(resolveClientEntriesDev_js_1.resolveClientEntriesDev);
// Return `PluginInterop` instead of `Plugin` to avoid type mismatch upon different Vite versions
function plugin(vikeVitePluginOptions = {}) {
    const plugins = [
        ...(0, pluginCommon_js_1.pluginCommon)(vikeVitePluginOptions),
        (0, pluginVirtualFiles_js_1.pluginVirtualFiles)(),
        ...(0, pluginDev_js_1.pluginDev)(),
        ...(0, pluginBuild_js_1.pluginBuild)(),
        (0, pluginPreview_js_1.pluginPreview)(),
        ...(0, pluginExtractAssets_js_1.pluginExtractAssets)(),
        (0, pluginExtractExportNames_js_1.pluginExtractExportNames)(),
        ...(0, pluginSetGlobalContext_js_1.pluginSetGlobalContext)(),
        (0, pluginBaseUrls_js_1.pluginBaseUrls)(),
        (0, pluginEnvVars_js_1.pluginEnvVars)(),
        (0, pluginFileEnv_js_1.pluginFileEnv)(),
        (0, pluginWorkaroundCssModuleHmr_js_1.pluginWorkaroundCssModuleHmr)(),
        (0, pluginWorkaroundVite6HmrRegression_js_1.pluginWorkaroundVite6HmrRegression)(),
        (0, pluginReplaceConstants_js_1.pluginReplaceConstants)(),
    ];
    Object.assign(plugins, { _vikeVitePluginOptions: vikeVitePluginOptions });
    return plugins;
}
// Error upon wrong usage
Object.defineProperty(plugin, 'apply', {
    enumerable: true,
    get: () => {
        (0, utils_js_2.assertUsage)(false, `Add ${picocolors_1.default.cyan('vike()')} instead of ${picocolors_1.default.cyan('vike')} to vite.config.js#plugins (i.e. call the function and add the return value instead of adding the function itself)`, { showStackTrace: true });
    },
});
// CJS default export `const vike = require('vike/plugin')`
//  - It needs to live at the end of this file, in order to ensure we do it after all assignments to `exports`.
try {
    module.exports = Object.assign(exports.default, exports);
}
catch { }
