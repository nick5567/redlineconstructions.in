"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.determineFsAllowList = determineFsAllowList;
const vite_1 = require("vite");
const node_path_1 = __importDefault(require("node:path"));
const utils_js_1 = require("../../utils.js");
const node_url_1 = require("node:url");
// @ts-ignore `file:///${__filename.split('\\').join('/')}` is shimmed at dist/cjs by dist-cjs-fixup.js.
const importMetaUrl = `file:///${__filename.split('\\').join('/')}`;
(0, utils_js_1.assertPosixPath)(importMetaUrl);
const __dirname_ = node_path_1.default.posix.dirname((0, node_url_1.fileURLToPath)(importMetaUrl));
(0, utils_js_1.assertPosixPath)(__dirname_);
async function determineFsAllowList(config) {
    const fsAllow = config.server.fs.allow;
    // fsAllow should already contain searchForWorkspaceRoot()
    (0, utils_js_1.assert)(fsAllow.length >= 1);
    fsAllow.push(process.cwd());
    // searchForWorkspaceRoot() is buggy: https://github.com/vikejs/vike/issues/555.
    // BUt that's not a problem since Vite automatically inserts searchForWorkspaceRoot().
    // We add it again just to be sure.
    fsAllow.push((0, vite_1.searchForWorkspaceRoot)(process.cwd()));
    // Add node_modules/vike/
    const vikeNodeModulesRoot = (0, utils_js_1.getVikeNodeModulesRoot)();
    fsAllow.push(vikeNodeModulesRoot);
}
